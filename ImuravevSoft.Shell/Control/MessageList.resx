<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABG
        DgAAAk1TRnQBSQFMAgEBAwEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAyEBLwFbAVoBWQGVAZIBjwGHAdcBuwG2AaUB+AG7AbYBpQH4AZABjgGI
        AdYBWgFZAVcBkwMfAS1YAAMCAQMEAAI+AUIBcAJFAWUBtAJHAV8BqgJGAWIBrAJHAWABqwJHAWABqgJG
        AWIBsAIoASkBPQQAAwIBA1AAAwYBCAFdAVwBWgGYAaQBngGWAeYCSgFJAXoDIAEuAwYBCAMGAQgDIQEv
        AksBSgF7AaQBngGWAeYBWwFaAVkBlAMFAQcIAAE/AUABRgF2AToBWQF+AcQBPwFaAXUBugE+AVwBdwG7
        AT8BXQF1AboBPwFfAXUBugE/AWABdQG5AT8BYQF0AbgBPwFgAXQBuAE/AV8BcwG3AT8BXAFyAbYBPwFZ
        AXEBtgFBAVkBcQG1AUEBVwFvAbMBPQFVAXUBvAE9AT4BQgFuBAADAgEDBAACPQFBAW4CFwGxAf8CGwHE
        Af8CGgHAAf8CGgHAAf8CGgHBAf8CGwHCAf8CGwHFAf8CKAGVAe4DKAE9BAADAgEDSAADBgEIAXwBegF2
        AcABaQFnAWUBqAMKAQ0YAAMKAQ4BagFoAWYBqgF6AXkBcwG+AwUBBwQAAT0BPgFBAWwBAQGVAe4B/wEE
        AbIB/AH+AQABuQL/AQABwwL/AQABzQL/AQAB1QL/AQAB2AL/AQAB1QL/AQAB0AL/AQABxgL/AQABvQL/
        AQABsgL/AQABrwL/AQABhwHoAf8CMgE0AVIDAgEDBAACOwE+AWcCEgGjAf8CFwGyAf0CFgGrAf0CFQGr
        Af0CFQGqAf0CFQGrAf0CFgGsAf0CFgGrAfwCFQG3Af8CIAGSAfQDLQFGBAADAgEDRAABXQFcAVoBmAFp
        AWcBZQGoAwABAQwAAZUBegE5AcgBkgF4ATsBxQ8AAQEBagFoAWYBqgFbAVoBWQGUBAADAQECATsBXwGB
        AcYBDwGzAv8BFAGwAfEB+wEIAbsB+QH9AQIBvgH6Af0BAgHDAfoB/QFaAdoB+gH9AVQB2AH6Af0BAgG/
        AfoB/QEEAb0B+gH9AQIBtAH6Af0BBwGoAfIB+gEAAaQB/QH/AUMBUwFoAaoIAAI3ATgBWwINAZcB/wIP
        AaMB/QIKAZwB/wIKAZsB/wIJAZoB/wIJAZoB/wIKAZsB/wIKAZwB/wILAZ4B/wINAZ0B/gINAagB/wIY
        AZIB+AMwAUxEAAMhAS8BowGeAZUB5QMKAQ0QAAH0AakBAQH/AfQBqQEBAf8QAAMKAQ4BpAGeAZYB5gMf
        AS0EAAMxAU4BFgGYAegB/wEhAboB/AH+AR8BvQH7Af8BEgHBAf0B/wEAAb8C/wHZAfQB/gH/AdAB7gH8
        Af8BAAG6Av8BAAG4Av8BAAGvAv8BAAGvAv8BBQF/AdgB+wMiATIEAAI1ATYBVwIUAYUB+QIGAYwB/wIH
        AYQB/wIHAYEB/wIHAXwB/wIHAXoB/wIHAXkB/wIHAXoB/wIHAX0B/wIHAYIB/wIIAYcB/wIKAYkB/gII
        AZYB/wIXAYoB9wIzATQBU0AAAlwBWgGXAUoCSQF4FAAB9AGpAQEB/wH0AakBAQH/FAACSwFKAXsBWgFZ
        AVcBkwMAAQEEAAFFAVsBdQG6ASoBtwH8Af8BMAG5AfUB/QExAcEB+gH/ASEBwAH7Af8BUgHGAfkB/wE+
        Ab0B+QH/AQABsgL/AQEBsAL/AQMBqAH6Af0BAAGeAfoB/wFDAU4BWwGZBAADAQECAkEBZAHCAgQBcAH/
        AgYBYwH9AgABWQH/AgABVAH/AgABUAH/AgABTgH/AgABTgH/AgABTwH/AgABUgH/AgABVgH/AgABXAH/
        AgABYwH/AgcBbwH8AgUBfQH/AkYBXAGqQAABlQGRAYkB2QMfASwUAAH0AakBAQH/AfQBqQEBAf8UAAMh
        AS8BkAGOAYgB1gMBAQIEAAIoASkBPQErAZUB4wH/ATsBvwH+Af8BOgG7AfkB/wE8Ab8B+QH/AeMB9gH6
        Af8BtgHnAfwB/wEAAacC/wEAAaQC/wEAAacC/wEWAXABvQHvAxgBIQcAAQECQgFcAcMCAAFBAf8CGgFS
        Af4CjQGlAf8CkAGmAf8CkAGlAf8CkQGlAf8CkgGlAf8CkgGmAf8CkwGnAf8CkwGoAf8ClgGrAf8CkQGq
        Af8CGAFVAf0CAAFQAf8CRgFZAaxAAAG6AbYBqgH5AwUBBxQAAfQBqQEBAf8B9AGpAQEB/xQAAwYBCAG7
        AbYBpQH4BAADAQECBAABSQFWAWYBpwFEAbUB+QH/AUgBuAH1Af0BRwG7AfkB/wHqAfcB+QH/AdMB7QH4
        Af8BOQG1AfoB/wEXAaEB9gH8AQABkQH2Af8BQgFGAU0BgQQAAwEBAgQAAj8BYQHHAgABYwH/AhoBfQH+
        AtQB1QH/AuYB4gH/AuEB3wH/AuEB3gH/AuAB3QH/At8B3AH/At4B2wH/AtwB2QH/At8B2gH/AsgBzQH/
        AhgBfQH9AgABbAH/AkYBXgGyQAABugG2AaoB+QMFAQcUAAH0AakBAQH/AfQBqQEBAf8UAAMGAQgBuwG2
        AaUB+AcAAQEEAAMfAS0BRQGNAc4B9wFXAcEB/gH/AVMBuQH4Af8B6QH2AfkB/wHRAesB+QH/AVgBtwH1
        Af4BYAHFAf4B/wE7AXEBpgHhAw0BEgwAAkEBdAHJAgUBowH/AhcBkgH+AroBvwH/A9gB/wLRAdIB/wPS
        Af8D0gH/A9EB/wPRAf8CzwHQAf8C1gHUAf8CsgG8Af8CEQGXAf0CAAGeAf8CRQFoAbdAAAGVAZIBiwHa
        Ax4BKxQAAZcBegE5AckBlQF6ATkByBQAAyABLgGSAY8BhwHXCAADAQECBAABSAFOAVcBkwFdAbsB9gH/
        AWEBvgH1Af0B7gH4AfoB/wHYAe4B+AH/AWEBvgH3Af0BZAG2Ae8B/wE+AT8BQgFsBAADAQECCAACRQF3
        AckCFwGlAf8CIAGgAf4CLAGXAf8CMwGcAf8CNQGeAf8CNwGfAf8COAGgAf8COAGgAf8COAGgAf8CNgGf
        Af8CNQGeAf8CLgGaAf8CGgGeAf4CDwGfAf8CRQFrAbpAAAFdAVwBWgGYAkkBSAF3MAACSgFJAXoBWwFa
        AVkBlQsAAQEEAAMWAR4BVwGJAbsB7QFxAcwC/wHIAeUB9gH/AbcB3AHzAf4BcwHMAf4B/wFYAXEBkAHS
        AwYBCBAAAkcBgQHOAiYBrwH/AjEBswH+AjIBvAH/AjcBvwH/AjsBwQH/Aj0BwwH/Aj4BwwH/Aj0BwwH/
        AjoBwQH/AjYBvgH/AjABugH/AisBtwH/AisBrgH9Ah4BqgH/AkgBdAHCQAADIgExAZ8BnAGSAeQDCQEM
        EAABlAF4AToBxwGSAXgBOwHFEAADCgENAaQBngGWAeYDIQEvDAADAgEDBAABRQFHAUwBfwF1AcIB9AH/
        AXcBxAH1Af0BfgHKAfkB/gF0AbkB7QH/ATUBNgE3AVgEAAMBAQIMAAJJAVMBigI3AboB/wJAAbwB/QJF
        AcMB/wJLAccB/wJQAcoB/wJTAcwB/wJUAc0B/wJTAcwB/wJQAcoB/wJMAccB/wJGAcMB/wI+Ab4B/wI5
        AbcB/QIvAbQB/wJFAUwBfkQAAWABXwFdAZwCZwFjAaYDAAEBDAABlwF6ATkByQGVAXoBOQHIDwABAQFp
        AWcBZQGoAlwBWgGXGAADDQESAWIBgwGoAeEBjwHXAv8BjwHUAf0B/wFaAWkBgAHCHAACSQFUAYkCSwHI
        Af8CUwHIAfwCWwHTAf8CYQHXAf8CZQHZAf8CZgHaAf8CZQHZAf8CYQHXAf8CXAHTAf8CVAHOAf8CSwHC
        AfwCQwHDAf8CRAFKAXpIAAMHAQkBfgF8AXcBwgJnAWMBpgMJAQwYAAMKAQ0BaQFnAWUBqAF8AXoBdgHA
        AwYBCBQAAwEBAgQAAT4BPwFCAWwBlAHQAfcB/wGMAcMB7wH/Ay4BSAQAAwEBAhAAAwEBAgQAAkwBVwGN
        Al8B1gH/AmsB0wH8AnMB3wH+AnkB4gH+AnsB4wH+AnkB4gH+AnQB3wH+AmoB2AH9AmEB0gH9AlYB0QH/
        AkQBSgF4BAADAgEDSAADBwEJAWABXwFdAZwBnwGcAZIB5AJJAUgBdwMeASsDBQEHAwUBBwMfASwBSgJJ
        AXgBowGeAZUB5QFdAVwBWgGYAwYBCCAAAwQBBQFjAXgBlwHZAVsBZgF5AbwHAAEBGAADAQECBAACTAFX
        AYoCcQHkAf8CfwHoAf4CiwHxAf8CkAH0Af8CjAHyAf8CgwHsAf8CdwHlAf8CZwHeAf8CQQFGAXAEAAMC
        AQNUAAMiATEBXQFcAVoBmAGVAZIBiwHaAboBtgGqAfkBugG2AaoB+QGVAZEBiQHZAlwBWgGXAyEBLywA
        AxgBIQMUARskAAMBAQIEAAJLAVQBhgJjAY8BxQJjAYkBvQJmAY0BwAJlAYwBwQJiAYoBwAJiAZYBzAJB
        AUYBcAQAAwIBA0gAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAHwAQ8C/wHQ
        AQsCAAHAAQMCAAGgAQUCAAGHAeECAAFAAQICAAGOAXEBAAEBAYABAQIAAR4BeAGAAQEEAAE+AXwBQAEC
        BAABPgF8AUABAgQAAT4BfAGgAQUEAAE+AXwBoAEHBAABPgF8AdABCwQAAT8B/AHQAQ8EAAEeAXgB6AEX
        BAABjgFxAfgBPwGAAQECAAGHAeEB9AEvAUABAgIAAcABAwH8AV8BoAEFAgAB8AEPAf4BfwHQAQsCAAs=
</value>
  </data>
</root>